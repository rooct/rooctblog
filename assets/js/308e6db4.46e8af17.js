"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9828],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},763:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={title:"Shadowing Inherited State Variables",version:"0.8.10",description:"An example of shadowing state variables by inheritance"},l=void 0,s={unversionedId:"example/Shadow",id:"example/Shadow",isDocsHomePage:!1,title:"Shadowing Inherited State Variables",description:"An example of shadowing state variables by inheritance",source:"@site/docs/example/Shadow.md",sourceDirName:"example",slug:"/example/Shadow",permalink:"/rooctblog/docs/example/Shadow",tags:[],version:"current",frontMatter:{title:"Shadowing Inherited State Variables",version:"0.8.10",description:"An example of shadowing state variables by inheritance"},sidebar:"docs",previous:{title:"Sending Ether (transfer, send, call)",permalink:"/rooctblog/docs/example/SendingEther"},next:{title:"Verifying Signature",permalink:"/rooctblog/docs/example/Signature"}},u=[],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Unlike functions, state variables cannot be overridden by re-declaring it\nin the child contract."),(0,a.kt)("p",null,"Let's learn how to correctly override inherited state variables."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract A {\n    string public name = "Contract A";\n\n    function getName() public view returns (string memory) {\n        return name;\n    }\n}\n\n// Shadowing is disallowed in Solidity 0.6\n// This will not compile\n// contract B is A {\n//     string public name = "Contract B";\n// }\n\ncontract C is A {\n    // This is the correct way to override inherited state variables.\n    constructor() {\n        name = "Contract C";\n    }\n\n    // C.getName returns "Contract C"\n}\n\n')))}d.isMDXComponent=!0}}]);