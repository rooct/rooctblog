"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return d}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),p=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=p(e.components);return t.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?t.createElement(h,o(o({ref:r},u),{},{components:n})):t.createElement(h,o({ref:r},u))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7370:function(e,r,n){n.r(r),n.d(r,{contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var t=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={},s="\u4efb\u52a1\u5e76\u884c\u5904\u7406",p={unversionedId:"rusty/cocurrency/parallel",id:"rusty/cocurrency/parallel",isDocsHomePage:!1,title:"\u4efb\u52a1\u5e76\u884c\u5904\u7406",description:"\u5e76\u884c\u4fee\u6539\u6570\u7ec4\u4e2d\u7684\u5143\u7d20",source:"@site/docs/rusty/cocurrency/parallel.md",sourceDirName:"rusty/cocurrency",slug:"/rusty/cocurrency/parallel",permalink:"/rooctblog/docs/rusty/cocurrency/parallel",tags:[],version:"current",frontMatter:{},sidebar:"rust",previous:{title:"\u53c2\u6570\u89e3\u6790",permalink:"/rooctblog/docs/rusty/cmd/parsing"},next:{title:"\u7ebf\u7a0b",permalink:"/rooctblog/docs/rusty/cocurrency/threads"}},u=[{value:"\u5e76\u884c\u4fee\u6539\u6570\u7ec4\u4e2d\u7684\u5143\u7d20",id:"\u5e76\u884c\u4fee\u6539\u6570\u7ec4\u4e2d\u7684\u5143\u7d20",children:[]},{value:"\u5e76\u884c\u6d4b\u8bd5\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6",id:"\u5e76\u884c\u6d4b\u8bd5\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6",children:[]},{value:"\u4f7f\u7528\u7ed9\u5b9a\u6761\u4ef6\u5e76\u884c\u641c\u7d22",id:"\u4f7f\u7528\u7ed9\u5b9a\u6761\u4ef6\u5e76\u884c\u641c\u7d22",children:[]},{value:"\u5bf9\u6570\u7ec4\u8fdb\u884c\u5e76\u884c\u6392\u5e8f",id:"\u5bf9\u6570\u7ec4\u8fdb\u884c\u5e76\u884c\u6392\u5e8f",children:[]},{value:"\u5e76\u884c\u5316 Map-Reuduce",id:"\u5e76\u884c\u5316-map-reuduce",children:[]},{value:"\u5e76\u884c\u751f\u6210\u7f29\u7565\u56fe",id:"\u5e76\u884c\u751f\u6210\u7f29\u7565\u56fe",children:[]}],c={toc:u};function m(e){var r=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u4efb\u52a1\u5e76\u884c\u5904\u7406"},"\u4efb\u52a1\u5e76\u884c\u5904\u7406"),(0,l.kt)("h3",{id:"\u5e76\u884c\u4fee\u6539\u6570\u7ec4\u4e2d\u7684\u5143\u7d20"},"\u5e76\u884c\u4fee\u6539\u6570\u7ec4\u4e2d\u7684\u5143\u7d20"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/1.5.1/rayon/index.html"},"rayon")," \u63d0\u4f9b\u4e86\u4e00\u4e2a ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.IntoParallelRefMutIterator.html#tymethod.par_iter_mut"},"par_iter_mut")," \u65b9\u6cd5\u7528\u4e8e\u5e76\u884c\u5316\u8fed\u4ee3\u4e00\u4e2a\u6570\u636e\u96c6\u5408\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},'use rayon::prelude::*;\n\nfn main {\n    let mut arr = [0, 7, 9, 11];\n    arr.par_iter_mut.for_each(|p| *p -= 1);\n    println!("{:?}", arr);\n}\n')),(0,l.kt)("h3",{id:"\u5e76\u884c\u6d4b\u8bd5\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6"},"\u5e76\u884c\u6d4b\u8bd5\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.ParallelIterator.html#method.any"},"rayon::any")," \u548c ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.ParallelIterator.html#method.all"},"rayon::all")," \u7c7b\u4f3c\u4e8e ",(0,l.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.any"},"std::any")," / ",(0,l.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.all"},"std::all")," \uff0c\u4f46\u662f\u662f\u5e76\u884c\u7248\u672c\u7684\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rayon::any")," \u5e76\u884c\u68c0\u67e5\u8fed\u4ee3\u5668\u4e2d\u662f\u5426\u6709\u4efb\u4f55\u5143\u7d20\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u4e00\u65e6\u53d1\u73b0\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\uff0c\u5c31\u7acb\u5373\u8fd4\u56de"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rayon::all")," \u5e76\u884c\u68c0\u67e5\u8fed\u4ee3\u5668\u4e2d\u7684\u6240\u6709\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6\uff0c\u4e00\u65e6\u53d1\u73b0\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\uff0c\u5c31\u7acb\u5373\u8fd4\u56de")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},"use rayon::prelude::*;\n\nfn main {\n    let mut vec = vec![2, 4, 6, 8];\n\n    assert!(!vec.par_iter.any(|n| (*n % 2) != 0));\n    assert!(vec.par_iter.all(|n| (*n % 2) == 0));\n    assert!(!vec.par_iter.any(|n| *n > 8 ));\n    assert!(vec.par_iter.all(|n| *n <= 8 ));\n\n    vec.push(9);\n\n    assert!(vec.par_iter.any(|n| (*n % 2) != 0));\n    assert!(!vec.par_iter.all(|n| (*n % 2) == 0));\n    assert!(vec.par_iter.any(|n| *n > 8 ));\n    assert!(!vec.par_iter.all(|n| *n <= 8 )); \n}\n")),(0,l.kt)("h3",{id:"\u4f7f\u7528\u7ed9\u5b9a\u6761\u4ef6\u5e76\u884c\u641c\u7d22"},"\u4f7f\u7528\u7ed9\u5b9a\u6761\u4ef6\u5e76\u884c\u641c\u7d22"),(0,l.kt)("p",null,"\u4e0b\u9762\u4f8b\u5b50\u4f7f\u7528 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.IntoParallelRefIterator.html#tymethod.par_iter"},"par_iter")," \u548c ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.ParallelIterator.html#method.find_any"},"rayon::find_any")," \u6765\u5e76\u884c\u641c\u7d22\u4e00\u4e2a\u6570\u7ec4\uff0c\u76f4\u5230\u627e\u5230\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u6709\u591a\u4e2a\u5143\u7d20\u6ee1\u8db3\u6761\u4ef6\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"rayon")," \u4f1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u5143\u7d20\uff0c\u6ce8\u610f\uff1a\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u5143\u7d20\u672a\u5fc5\u662f\u6570\u7ec4\u4e2d\u7684\u987a\u5e8f\u6700\u9760\u524d\u7684\u90a3\u4e2a\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},"use rayon::prelude::*;\n\nfn main {\n    let v = vec![6, 2, 1, 9, 3, 8, 11];\n\n    // \u8fd9\u91cc\u4f7f\u7528\u4e86 `&&x` \u7684\u5f62\u5f0f\uff0c\u5927\u5bb6\u53ef\u4ee5\u5728\u4ee5\u4e0b\u94fe\u63a5\u9605\u8bfb\u66f4\u591a https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.find\n    let f1 = v.par_iter.find_any(|&&x| x == 9);\n    let f2 = v.par_iter.find_any(|&&x| x % 2 == 0 && x > 6);\n    let f3 = v.par_iter.find_any(|&&x| x > 8);\n\n    assert_eq!(f1, Some(&9));\n    assert_eq!(f2, Some(&8));\n    assert!(f3 > Some(&8));\n}\n")),(0,l.kt)("h3",{id:"\u5bf9\u6570\u7ec4\u8fdb\u884c\u5e76\u884c\u6392\u5e8f"},"\u5bf9\u6570\u7ec4\u8fdb\u884c\u5e76\u884c\u6392\u5e8f"),(0,l.kt)("p",null,"\u4e0b\u9762\u7684\u4f8b\u5b50\u5c06\u5bf9\u5b57\u7b26\u4e32\u6570\u7ec4\u8fdb\u884c\u5e76\u884c\u6392\u5e8f\u3002"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/slice/trait.ParallelSliceMut.html#method.par_sort_unstable"},"par_sort_unstable")," \u65b9\u6cd5\u7684\u6392\u5e8f\u6027\u80fd\u5f80\u5f80\u8981\u6bd4",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/1.5.1/rayon/slice/trait.ParallelSliceMut.html#method.par_sort"},"\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5"),"\u66f4\u9ad8\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},"use rand::{Rng, thread_rng};\nuse rand::distributions::Alphanumeric;\nuse rayon::prelude::*;\n\nfn main {\n  let mut vec = vec![String::new; 100_000];\n  // \u5e76\u884c\u751f\u6210\u6570\u7ec4\u4e2d\u7684\u5b57\u7b26\u4e32\n  vec.par_iter_mut.for_each(|p| {\n    let mut rng = thread_rng;\n    *p = (0..5).map(|_| rng.sample(&Alphanumeric)).collect\n  });\n  \n  // \n  vec.par_sort_unstable;\n}\n")),(0,l.kt)("h3",{id:"\u5e76\u884c\u5316-map-reuduce"},"\u5e76\u884c\u5316 Map-Reuduce"),(0,l.kt)("p",null,"\u4e0b\u9762\u4f8b\u5b50\u4f7f\u7528 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.ParallelIterator.html#method.filter"},"rayon::filter"),", ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.ParallelIterator.html#method.map"},"rayon::map"),", \u548c ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/rayon/*/rayon/iter/trait.ParallelIterator.html#method.reduce"},"rayon::reduce")," \u6765\u8d85\u8fc7 30 \u5c81\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"Person")," \u7684\u5e73\u5747\u5e74\u9f84\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rayon::filter")," \u8fd4\u56de\u96c6\u5408\u4e2d\u6240\u6709\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rayon::map")," \u5bf9\u96c6\u5408\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u521b\u5efa\u5e76\u8fd4\u56de\u65b0\u7684\u8fed\u4ee3\u5668\uff0c\u7c7b\u4f3c\u4e8e",(0,l.kt)("a",{parentName:"li",href:"https://course.rs/advance/functional-programing/iterator.html#%E8%BF%AD%E4%BB%A3%E5%99%A8%E9%80%82%E9%85%8D%E5%99%A8"},"\u8fed\u4ee3\u5668\u9002\u914d\u5668")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rayon::reduce")," \u5219\u8fed\u4ee3\u5668\u7684\u5143\u7d20\u8fdb\u884c\u4e0d\u505c\u7684\u805a\u5408\u8fd0\u7b97\uff0c\u76f4\u5230\u83b7\u53d6\u4e00\u4e2a\u6700\u7ec8\u7ed3\u679c\uff0c\u8fd9\u4e2a\u7ed3\u679c\u8ddf\u4f8b\u5b50\u4e2d ",(0,l.kt)("inlineCode",{parentName:"li"},"rayon::sum")," \u83b7\u53d6\u7684\u7ed3\u679c\u662f\u76f8\u540c\u7684")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},'use rayon::prelude::*;\n\nstruct Person {\n    age: u32,\n}\n\nfn main {\n    let v: Vec<Person> = vec![\n        Person { age: 23 },\n        Person { age: 19 },\n        Person { age: 42 },\n        Person { age: 17 },\n        Person { age: 17 },\n        Person { age: 31 },\n        Person { age: 30 },\n    ];\n\n    let num_over_30 = v.par_iter.filter(|&x| x.age > 30).count as f32;\n    let sum_over_30 = v.par_iter\n        .map(|x| x.age)\n        .filter(|&x| x > 30)\n        .reduce(|| 0, |x, y| x + y);\n\n    let alt_sum_30: u32 = v.par_iter\n        .map(|x| x.age)\n        .filter(|&x| x > 30)\n        .sum;\n\n    let avg_over_30 = sum_over_30 as f32 / num_over_30;\n    let alt_avg_over_30 = alt_sum_30 as f32/ num_over_30;\n\n    assert!((avg_over_30 - alt_avg_over_30).abs < std::f32::EPSILON);\n    println!("The average age of people older than 30 is {}", avg_over_30);\n}\n')),(0,l.kt)("h3",{id:"\u5e76\u884c\u751f\u6210\u7f29\u7565\u56fe"},"\u5e76\u884c\u751f\u6210\u7f29\u7565\u56fe"),(0,l.kt)("p",null,"\u4e0b\u9762\u4f8b\u5b50\u5c06\u4e3a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u56fe\u7247\u5e76\u884c\u751f\u6210\u7f29\u7565\u56fe\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u5b58\u5230\u65b0\u7684\u76ee\u5f55 ",(0,l.kt)("inlineCode",{parentName:"p"},"thumbnails")," \u4e2d\u3002"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/glob/*/glob/fn.glob_with.html"},"glob::glob_with")," \u53ef\u4ee5\u627e\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},".jpg")," \u6587\u4ef6\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"rayon")," \u901a\u8fc7 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/image/*/image/enum.DynamicImage.html#method.resize"},"DynamicImage::resize")," \u6765\u5e76\u884c\u8c03\u6574\u56fe\u7247\u7684\u5927\u5c0f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},'# use error_chain::error_chain;\n\nuse std::path::Path;\nuse std::fs::create_dir_all;\n\n# use error_chain::ChainedError;\nuse glob::{glob_with, MatchOptions};\nuse image::{FilterType, ImageError};\nuse rayon::prelude::*;\n\n# error_chain! {\n#    foreign_links {\n#        Image(ImageError);\n#        Io(std::io::Error);\n#        Glob(glob::PatternError);\n#    }\n#}\n\nfn main -> Result<> {\n    let options: MatchOptions = Default::default;\n    // \u627e\u5230\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6240\u6709 `jpg` \u6587\u4ef6\n    let files: Vec<_> = glob_with("*.jpg", options)?\n        .filter_map(|x| x.ok)\n        .collect;\n\n    if files.len == 0 {\n        error_chain::bail!("No .jpg files found in current directory");\n    }\n\n    let thumb_dir = "thumbnails";\n    create_dir_all(thumb_dir)?;\n\n    println!("Saving {} thumbnails into \'{}\'...", files.len, thumb_dir);\n\n    let image_failures: Vec<_> = files\n        .par_iter\n        .map(|path| {\n            make_thumbnail(path, thumb_dir, 300)\n                .map_err(|e| e.chain_err(|| path.display.to_string))\n        })\n        .filter_map(|x| x.err)\n        .collect;\n\n    image_failures.iter.for_each(|x| println!("{}", x.display_chain));\n\n    println!("{} thumbnails saved successfully", files.len - image_failures.len);\n    Ok()\n}\n\nfn make_thumbnail<PA, PB>(original: PA, thumb_dir: PB, longest_edge: u32) -> Result<>\nwhere\n    PA: AsRef<Path>,\n    PB: AsRef<Path>,\n{\n    let img = image::open(original.as_ref)?;\n    let file_path = thumb_dir.as_ref.join(original);\n\n    Ok(img.resize(longest_edge, longest_edge, FilterType::Nearest)\n        .save(file_path)?)\n}\n')))}m.isMDXComponent=!0}}]);