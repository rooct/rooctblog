"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4880],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=u(n),f=l,g=m["".concat(o,".").concat(f)]||m[f]||p[f]||a;return n?r.createElement(g,i(i({ref:t},s),{},{components:n})):r.createElement(g,i({ref:t},s))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:l,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},250:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return s}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),i=["components"],c={title:"Multi Delegatecall",version:"0.8.10",description:"An example of contract to call multiple functions in a single transaction"},o=void 0,u={unversionedId:"example/app/MultiDelegatecall",id:"example/app/MultiDelegatecall",isDocsHomePage:!1,title:"Multi Delegatecall",description:"An example of contract to call multiple functions in a single transaction",source:"@site/docs/example/app/MultiDelegatecall.md",sourceDirName:"example/app",slug:"/example/app/MultiDelegatecall",permalink:"/rooctblog/docs/example/app/MultiDelegatecall",tags:[],version:"current",frontMatter:{title:"Multi Delegatecall",version:"0.8.10",description:"An example of contract to call multiple functions in a single transaction"},sidebar:"docs",previous:{title:"Minimal Proxy Contract",permalink:"/rooctblog/docs/example/app/MinimalProxy"},next:{title:"Multi Call",permalink:"/rooctblog/docs/example/app/Muticall"}},s=[],p={toc:s};function m(e){var t=e.components,n=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An example of calling multiple functions with a single transaction, using ",(0,a.kt)("inlineCode",{parentName:"p"},"delegatecall"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract MultiDelegatecall {\n    error DelegatecallFailed();\n\n    function multiDelegatecall(bytes[] memory data)\n        external\n        payable\n        returns (bytes[] memory results)\n    {\n        results = new bytes[](data.length);\n\n        for (uint i; i < data.length; i++) {\n            (bool ok, bytes memory res) = address(this).delegatecall(data[i]);\n            if (!ok) {\n                revert DelegatecallFailed();\n            }\n            results[i] = res;\n        }\n    }\n}\n\n// Why use multi delegatecall? Why not multi call?\n// alice -> multi call --- call ---\x3e test (msg.sender = multi call)\n// alice -> test --- delegatecall ---\x3e test (msg.sender = alice)\ncontract TestMultiDelegatecall is MultiDelegatecall {\n    event Log(address caller, string func, uint i);\n\n    function func1(uint x, uint y) external {\n        // msg.sender = alice\n        emit Log(msg.sender, "func1", x + y);\n    }\n\n    function func2() external returns (uint) {\n        // msg.sender = alice\n        emit Log(msg.sender, "func2", 2);\n        return 111;\n    }\n\n    mapping(address => uint) public balanceOf;\n\n    // WARNING: unsafe code when used in combination with multi-delegatecall\n    // user can mint multiple times for the price of msg.value\n    function mint() external payable {\n        balanceOf[msg.sender] += msg.value;\n    }\n}\n\ncontract Helper {\n    function getFunc1Data(uint x, uint y) external pure returns (bytes memory) {\n        return abi.encodeWithSelector(TestMultiDelegatecall.func1.selector, x, y);\n    }\n\n    function getFunc2Data() external pure returns (bytes memory) {\n        return abi.encodeWithSelector(TestMultiDelegatecall.func2.selector);\n    }\n\n    function getMintData() external pure returns (bytes memory) {\n        return abi.encodeWithSelector(TestMultiDelegatecall.mint.selector);\n    }\n}\n\n')))}m.isMDXComponent=!0}}]);