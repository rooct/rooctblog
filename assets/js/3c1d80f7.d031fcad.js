"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3912],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=t.createContext({}),s=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=s(r),d=o,f=g["".concat(u,".").concat(d)]||g[d]||c[d]||l;return r?t.createElement(f,a(a({ref:n},p),{},{components:r})):t.createElement(f,a({ref:n},p))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=g;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=r[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},8925:function(e,n,r){r.r(n),r.d(n,{contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var t=r(7462),o=r(3366),l=(r(7294),r(3905)),a=["components"],i={},u="\u914d\u7f6e\u65e5\u5fd7",s={unversionedId:"rusty/devtools/config-log",id:"rusty/devtools/config-log",isDocsHomePage:!1,title:"\u914d\u7f6e\u65e5\u5fd7",description:"\u4e3a\u6bcf\u4e2a\u6a21\u5757\u5f00\u542f\u72ec\u7acb\u7684\u65e5\u5fd7\u7ea7\u522b",source:"@site/docs/rusty/devtools/config-log.md",sourceDirName:"rusty/devtools",slug:"/rusty/devtools/config-log",permalink:"/rooctblog/docs/rusty/devtools/config-log",tags:[],version:"current",frontMatter:{},sidebar:"rust",previous:{title:"\u6784\u5efa\u65f6\u5de5\u5177",permalink:"/rooctblog/docs/rusty/devtools/build-tools"},next:{title:"\u65e5\u5fd7",permalink:"/rooctblog/docs/rusty/devtools/log"}},p=[{value:"\u4e3a\u6bcf\u4e2a\u6a21\u5757\u5f00\u542f\u72ec\u7acb\u7684\u65e5\u5fd7\u7ea7\u522b",id:"\u4e3a\u6bcf\u4e2a\u6a21\u5757\u5f00\u542f\u72ec\u7acb\u7684\u65e5\u5fd7\u7ea7\u522b",children:[]},{value:"\u4f7f\u7528\u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u65e5\u5fd7",id:"\u4f7f\u7528\u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u65e5\u5fd7",children:[]},{value:"\u5728\u65e5\u5fd7\u4e2d\u5305\u542b\u65f6\u95f4\u6233",id:"\u5728\u65e5\u5fd7\u4e2d\u5305\u542b\u65f6\u95f4\u6233",children:[]},{value:"\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6",id:"\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6",children:[]}],c={toc:p};function g(e){var n=e.components,r=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u914d\u7f6e\u65e5\u5fd7"},"\u914d\u7f6e\u65e5\u5fd7"),(0,l.kt)("h3",{id:"\u4e3a\u6bcf\u4e2a\u6a21\u5757\u5f00\u542f\u72ec\u7acb\u7684\u65e5\u5fd7\u7ea7\u522b"},"\u4e3a\u6bcf\u4e2a\u6a21\u5757\u5f00\u542f\u72ec\u7acb\u7684\u65e5\u5fd7\u7ea7\u522b"),(0,l.kt)("p",null,"\u4e0b\u9762\u4ee3\u7801\u521b\u5efa\u4e86\u6a21\u5757 ",(0,l.kt)("inlineCode",{parentName:"p"},"foo")," \u548c\u5d4c\u5957\u6a21\u5757 ",(0,l.kt)("inlineCode",{parentName:"p"},"foo::bar"),"\uff0c\u5e76\u901a\u8fc7 ",(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/env_logger/*/env_logger/#enabling-logging"},"RUST_LOG")," \u73af\u5883\u53d8\u91cf\u5bf9\u5404\u81ea\u7684\u65e5\u5fd7\u7ea7\u522b\u8fdb\u884c\u4e86\u63a7\u5236\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},'mod foo {\n    mod bar {\n        pub fn run {\n            log::warn!("[bar] warn");\n            log::info!("[bar] info");\n            log::debug!("[bar] debug");\n        }\n    }\n\n    pub fn run {\n        log::warn!("[foo] warn");\n        log::info!("[foo] info");\n        log::debug!("[foo] debug");\n        bar::run;\n    }\n}\n\nfn main {\n    env_logger::init;\n    log::warn!("[root] warn");\n    log::info!("[root] info");\n    log::debug!("[root] debug");\n    foo::run;\n}\n')),(0,l.kt)("p",null,"\u8981\u8ba9\u73af\u5883\u53d8\u91cf\u751f\u6548\uff0c\u9996\u5148\u9700\u8981\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"env_logger::init")," \u5f00\u542f\u76f8\u5173\u7684\u652f\u6301\u3002\u7136\u540e\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u8fd0\u884c\u7a0b\u5e8f:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'RUST_LOG="warn,test::foo=info,test::foo::bar=debug" ./test\n')),(0,l.kt)("p",null,"\u6b64\u65f6\u7684\u9ed8\u8ba4\u65e5\u5fd7\u7ea7\u522b\u88ab\u8bbe\u7f6e\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"warn"),"\uff0c\u4f46\u6211\u4eec\u8fd8\u5c06 ",(0,l.kt)("inlineCode",{parentName:"p"},"foo")," \u6a21\u5757\u7ea7\u522b\u8bbe\u7f6e\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"foo::bar")," \u6a21\u5757\u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"debug"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"WARN:test: [root] warn\nWARN:test::foo: [foo] warn\nINFO:test::foo: [foo] info\nWARN:test::foo::bar: [bar] warn\nINFO:test::foo::bar: [bar] info\nDEBUG:test::foo::bar: [bar] debug\n")),(0,l.kt)("h3",{id:"\u4f7f\u7528\u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u65e5\u5fd7"},"\u4f7f\u7528\u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u6765\u8bbe\u7f6e\u65e5\u5fd7"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/env_logger/*/env_logger/struct.Builder.html"},"Builder")," \u5c06\u5bf9\u65e5\u5fd7\u8fdb\u884c\u914d\u7f6e\uff0c\u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"MY_APP_LOG")," \u6765\u66ff\u4ee3 ",(0,l.kt)("inlineCode",{parentName:"p"},"RUST_LOG")," \u73af\u5883\u53d8\u91cf:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},'use std::env;\nuse env_logger::Builder;\n\nfn main {\n    Builder::new\n        .parse(&env::var("MY_APP_LOG").unwrap_or_default)\n        .init;\n\n    log::info!("informational message");\n    log::warn!("warning message");\n    log::error!("this is an error {}", "message");\n}\n')),(0,l.kt)("h3",{id:"\u5728\u65e5\u5fd7\u4e2d\u5305\u542b\u65f6\u95f4\u6233"},"\u5728\u65e5\u5fd7\u4e2d\u5305\u542b\u65f6\u95f4\u6233"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},'use std::io::Write;\nuse chrono::Local;\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nfn main {\n    Builder::new\n        .format(|buf, record| {\n            writeln!(buf,\n                "{} [{}] - {}",\n                Local::now.format("%Y-%m-%dT%H:%M:%S"),\n                record.level,\n                record.args\n            )\n        })\n        .filter(None, LevelFilter::Info)\n        .init;\n\n    log::warn!("warn");\n    log::info!("info");\n    log::debug!("debug");\n}\n')),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"stderr")," \u7684\u8f93\u51fa:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"2022-03-22T21:57:06 [WARN] - warn\n2022-03-22T21:57:06 [INFO] - info\n")),(0,l.kt)("h3",{id:"\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6"},"\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.rs/log4rs/"},"log4rs")," \u53ef\u4ee5\u5e2e\u6211\u4eec\u5c06\u65e5\u5fd7\u8f93\u51fa\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8 YAML \u6587\u4ef6\u6216 ",(0,l.kt)("inlineCode",{parentName:"p"},"builder")," \u7684\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust,editable"},'# use error_chain::error_chain;\n\nuse log::LevelFilter;\nuse log4rs::append::file::FileAppender;\nuse log4rs::encode::pattern::PatternEncoder;\nuse log4rs::config::{Appender, Config, Root};\n\n#error_chain! {\n#    foreign_links {\n#        Io(std::io::Error);\n#        LogConfig(log4rs::config::Errors);\n#        SetLogger(log::SetLoggerError);\n#    }\n#}\n\nfn main -> Result<> {\n    // \u521b\u5efa\u65e5\u5fd7\u914d\u7f6e\uff0c\u5e76\u6307\u5b9a\u8f93\u51fa\u7684\u4f4d\u7f6e\n    let logfile = FileAppender::builder\n        // \u7f16\u7801\u6a21\u5f0f\u7684\u8be6\u60c5\u53c2\u89c1: https://docs.rs/log4rs/1.0.0/log4rs/encode/pattern/index.html\n        .encoder(Box::new(PatternEncoder::new("{l} - {m}\\n")))\n        .build("log/output.log")?;\n\n    let config = Config::builder\n        .appender(Appender::builder.build("logfile", Box::new(logfile)))\n        .build(Root::builder\n                   .appender("logfile")\n                   .build(LevelFilter::Info))?;\n\n    log4rs::init_config(config)?;\n\n    log::info!("Hello, world!");\n\n    Ok()\n}\n\n')))}g.isMDXComponent=!0}}]);