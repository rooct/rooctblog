"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8598],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2030:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],l={title:"Sending Ether (transfer, send, call)",version:"0.8.10",description:"An example of sending Ether in Solidity"},c=void 0,s={unversionedId:"solidity/example/SendingEther",id:"solidity/example/SendingEther",isDocsHomePage:!1,title:"Sending Ether (transfer, send, call)",description:"An example of sending Ether in Solidity",source:"@site/docs/solidity/example/SendingEther.md",sourceDirName:"solidity/example",slug:"/solidity/example/SendingEther",permalink:"/rooctblog/docs/solidity/example/SendingEther",tags:[],version:"current",frontMatter:{title:"Sending Ether (transfer, send, call)",version:"0.8.10",description:"An example of sending Ether in Solidity"},sidebar:"docs",previous:{title:"Self Destruct",permalink:"/rooctblog/docs/solidity/example/SelfDestruct"},next:{title:"Shadowing Inherited State Variables",permalink:"/rooctblog/docs/solidity/example/Shadow"}},u=[{value:"How to send Ether?",id:"how-to-send-ether",children:[]},{value:"How to receive Ether?",id:"how-to-receive-ether",children:[]},{value:"Which method should you use?",id:"which-method-should-you-use",children:[]}],d={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"how-to-send-ether"},"How to send Ether?"),(0,i.kt)("p",null,"You can send Ether to other contracts by"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"transfer")," (2300 gas, throws error)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"send")," (2300 gas, returns bool)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"call")," (forward all gas or set gas, returns bool)")),(0,i.kt)("h3",{id:"how-to-receive-ether"},"How to receive Ether?"),(0,i.kt)("p",null,"A contract receiving Ether must have at least one of the functions below"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"receive() external payable")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fallback() external payable"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"receive()")," is called if ",(0,i.kt)("inlineCode",{parentName:"p"},"msg.data")," is empty, otherwise ",(0,i.kt)("inlineCode",{parentName:"p"},"fallback()")," is called."),(0,i.kt)("h3",{id:"which-method-should-you-use"},"Which method should you use?"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"call")," in combination with re-entrancy guard is the recommended method to use after December 2019."),(0,i.kt)("p",null,"Guard against re-entrancy by"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"making all state changes before calling other contracts"),(0,i.kt)("li",{parentName:"ul"},"using re-entrancy guard modifier")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract ReceiveEther {\n    /*\n    Which function is called, fallback() or receive()?\n\n           send Ether\n               |\n         msg.data is empty?\n              / \\\n            yes  no\n            /     \\\nreceive() exists?  fallback()\n         /   \\\n        yes   no\n        /      \\\n    receive()   fallback()\n    */\n\n    // Function to receive Ether. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n\ncontract SendEther {\n    function sendViaTransfer(address payable _to) public payable {\n        // This function is no longer recommended for sending Ether.\n        _to.transfer(msg.value);\n    }\n\n    function sendViaSend(address payable _to) public payable {\n        // Send returns a boolean value indicating success or failure.\n        // This function is not recommended for sending Ether.\n        bool sent = _to.send(msg.value);\n        require(sent, "Failed to send Ether");\n    }\n\n    function sendViaCall(address payable _to) public payable {\n        // Call returns a boolean value indicating success or failure.\n        // This is the current recommended method to use.\n        (bool sent, bytes memory data) = _to.call{value: msg.value}("");\n        require(sent, "Failed to send Ether");\n    }\n}\n\n')))}p.isMDXComponent=!0}}]);