"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[135],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},282:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={title:"Call",version:"0.8.10",description:"In Solidity call is a low level function to interact with other contracts"},c=void 0,s={unversionedId:"solidity/example/Call",id:"solidity/example/Call",isDocsHomePage:!1,title:"Call",description:"In Solidity call is a low level function to interact with other contracts",source:"@site/docs/solidity/example/Call.md",sourceDirName:"solidity/example",slug:"/solidity/example/Call",permalink:"/rooctblog/docs/solidity/example/Call",tags:[],version:"current",frontMatter:{title:"Call",version:"0.8.10",description:"In Solidity call is a low level function to interact with other contracts"},sidebar:"docs",previous:{title:"Block Timestamp Manipulation",permalink:"/rooctblog/docs/solidity/example/BlockTimesatmp"},next:{title:"Calling Other Contract",permalink:"/rooctblog/docs/solidity/example/CallingContract"}},u=[],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Call\u8c03\u7528\u65b9\u6cd5")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'(bool success, bytes memory data) = _addr.call{value: 1}(abi.encodeWithSignature("foo(string)", "abc"))'),(0,o.kt)("li",{parentName:"ul"},"\u5224\u65adsuccess\u662f\u5426true\uff0c\u5426\u5219\u8c03\u7528\u5931\u8d25"),(0,o.kt)("li",{parentName:"ul"},"\u901a\u8fc7call\u65b9\u6cd5\u8c03\u7528\u4e0d\u5b58\u5728\u7684\u51fd\u6570\uff0c\u4f1a\u4fc3\u53d1fallback\u51fd\u6570")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"call")," is a low level function to interact with other contracts."),(0,o.kt)("p",null,"This is the recommended method to use when you're just sending Ether via calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"fallback")," function."),(0,o.kt)("p",null,"However it is not the recommend way to call existing functions."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract Receiver {\n    event Received(address caller, uint amount, string message);\n\n    fallback() external payable {\n        emit Received(msg.sender, msg.value, "Fallback was called");\n    }\n\n    function foo(string memory _message, uint _x) public payable returns (uint) {\n        emit Received(msg.sender, msg.value, _message);\n\n        return _x + 1;\n    }\n}\n\ncontract Caller {\n    event Response(bool success, bytes data);\n\n    // Let\'s imagine that contract B does not have the source code for\n    // contract A, but we do know the address of A and the function to call.\n    function testCallFoo(address payable _addr) public payable {\n        // You can send ether and specify a custom gas amount\n        (bool success, bytes memory data) = _addr.call{value: msg.value, gas: 5000}(\n            abi.encodeWithSignature("foo(string,uint256)", "call foo", 123)\n        );\n        require(success,"Call Fail");\n        emit Response(success, data);\n    }\n\n    // Calling a function that does not exist triggers the fallback function.\n    function testCallDoesNotExist(address _addr) public {\n        (bool success, bytes memory data) = _addr.call(\n            abi.encodeWithSignature("doesNotExist()")\n        );\n        require(success,"Call Fail");\n        emit Response(success, data);\n    }\n}\n\n')))}d.isMDXComponent=!0}}]);