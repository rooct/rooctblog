"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8480],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(t),f=a,d=m["".concat(c,".").concat(f)]||m[f]||s[f]||o;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3756:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={},c="\u53c2\u6570\u89e3\u6790",p={unversionedId:"rusty/cmd/parsing",id:"rusty/cmd/parsing",isDocsHomePage:!1,title:"\u53c2\u6570\u89e3\u6790",description:"Clap",source:"@site/docs/rusty/cmd/parsing.md",sourceDirName:"rusty/cmd",slug:"/rusty/cmd/parsing",permalink:"/rooctblog/docs/rusty/cmd/parsing",tags:[],version:"current",frontMatter:{},sidebar:"rust",previous:{title:"awesome",permalink:"/rooctblog/docs/rusty/cmd/awesome"},next:{title:"\u4efb\u52a1\u5e76\u884c\u5904\u7406",permalink:"/rooctblog/docs/rusty/cocurrency/parallel"}},u=[{value:"Clap",id:"clap",children:[]},{value:"Structopt",id:"structopt",children:[]}],s={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u53c2\u6570\u89e3\u6790"},"\u53c2\u6570\u89e3\u6790"),(0,o.kt)("h2",{id:"clap"},"Clap"),(0,o.kt)("p",null,"\u4e0b\u9762\u7684\u7a0b\u5e8f\u7ed9\u51fa\u4e86\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"clap")," \u6765\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\u7684\u6837\u5f0f\u7ed3\u6784\uff0c\u5982\u679c\u5927\u5bb6\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"clap")," ",(0,o.kt)("a",{parentName:"p",href:"https://docs.rs/clap/"},"\u6587\u6863"),"\u4e2d\u8fd8\u7ed9\u51fa\u4e86\u53e6\u5916\u4e24\u79cd\u521d\u59cb\u5316\u4e00\u4e2a\u5e94\u7528\u7684\u65b9\u5f0f\u3002"),(0,o.kt)("p",null,"\u5728\u4e0b\u9762\u7684\u6784\u5efa\u4e2d\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"value_of")," \u5c06\u83b7\u53d6\u901a\u8fc7 ",(0,o.kt)("inlineCode",{parentName:"p"},"with_name")," \u89e3\u6790\u51fa\u7684\u503c\u3002",(0,o.kt)("inlineCode",{parentName:"p"},"short")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"long")," \u7528\u4e8e\u8bbe\u7f6e\u7528\u6237\u8f93\u5165\u7684\u957f\u77ed\u547d\u4ee4\u683c\u5f0f\uff0c\u4f8b\u5982\u77ed\u547d\u4ee4 ",(0,o.kt)("inlineCode",{parentName:"p"},"-f")," \u548c\u957f\u547d\u4ee4 ",(0,o.kt)("inlineCode",{parentName:"p"},"--file"),"\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust,editable"},'use clap::{Arg, App};\n\nfn main {\n    let matches = App::new("My Test Program")\n        .version("0.1.0")\n        .author("Hackerman Jones <hckrmnjones@hack.gov>")\n        .about("Teaches argument parsing")\n        .arg(Arg::with_name("file")\n                 .short("f")\n                 .long("file")\n                 .takes_value(true)\n                 .help("A cool file"))\n        .arg(Arg::with_name("num")\n                 .short("n")\n                 .long("number")\n                 .takes_value(true)\n                 .help("Five less than your favorite number"))\n        .get_matches;\n\n    let myfile = matches.value_of("file").unwrap_or("input.txt");\n    println!("The file passed is: {}", myfile);\n\n    let num_str = matches.value_of("num");\n    match num_str {\n        None => println!("No idea what your favorite number is."),\n        Some(s) => {\n            match s.parse::<i32> {\n                Ok(n) => println!("Your favorite number must be {}.", n + 5),\n                Err(_) => println!("That\'s not a number! {}", s),\n            }\n        }\n    }\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"clap")," \u9488\u5bf9\u4e0a\u9762\u63d0\u4f9b\u7684\u6784\u5efa\u6837\u5f0f\uff0c\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u751f\u6210\u76f8\u5e94\u7684\u4f7f\u7528\u65b9\u5f0f\u8bf4\u660e\u3002\u4f8b\u5982\uff0c\u4e0a\u9762\u4ee3\u7801\u751f\u6210\u7684\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"My Test Program 0.1.0\nHackerman Jones <hckrmnjones@hack.gov>\nTeaches argument parsing\n\nUSAGE:\n    testing [OPTIONS]\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n    -f, --file <file>     A cool file\n    -n, --number <num>    Five less than your favorite number\n")),(0,o.kt)("p",null,"\u6700\u540e\uff0c\u518d\u4f7f\u7528\u4e00\u4e9b\u53c2\u6570\u6765\u8fd0\u884c\u4e0b\u6211\u4eec\u7684\u4ee3\u7801:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ cargo run -- -f myfile.txt -n 251\nThe file passed is: myfile.txt\nYour favorite number must be 256.\n")),(0,o.kt)("h2",{id:"structopt"},"Structopt"),(0,o.kt)("p",null,"@todo"))}m.isMDXComponent=!0}}]);