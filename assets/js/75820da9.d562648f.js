"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8282],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return y}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(n),y=i,f=d["".concat(c,".").concat(y)]||d[y]||p[y]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},609:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),s=["components"],a={title:"Solidity\u7b7e\u540d\u9a8c\u8bc1"},c=void 0,l={unversionedId:"solidity/utils/Verify",id:"solidity/utils/Verify",isDocsHomePage:!1,title:"Solidity\u7b7e\u540d\u9a8c\u8bc1",description:"Solidity-\u94fe\u4e0b\u7b7e\u540d\u7b7e\u540d-\u94fe\u4e0a\u9a8c\u8bc1\uff1b\u94fe\u4e0b\u4f7f\u7528 Ether.js \u8fdb\u884c\u7b7e\u540d\uff0c\u94fe\u4e0a\u4f7f\u7528 OpenZeppelin ECDSA \u9a8c\u8bc1",source:"@site/docs/solidity/utils/Verify.md",sourceDirName:"solidity/utils",slug:"/solidity/utils/Verify",permalink:"/rooctblog/docs/solidity/utils/Verify",tags:[],version:"current",frontMatter:{title:"Solidity\u7b7e\u540d\u9a8c\u8bc1"},sidebar:"docs",previous:{title:"SushiBar",permalink:"/rooctblog/docs/solidity/projects/SushiBar"}},u=[{value:"ethers.js",id:"ethersjs",children:[]},{value:"contract",id:"contract",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"solidity-\u94fe\u4e0b\u7b7e\u540d\u7b7e\u540d-\u94fe\u4e0a\u9a8c\u8bc1\u94fe\u4e0b\u4f7f\u7528-etherjs-\u8fdb\u884c\u7b7e\u540d\u94fe\u4e0a\u4f7f\u7528-openzeppelin-ecdsa-\u9a8c\u8bc1"},"Solidity-\u94fe\u4e0b\u7b7e\u540d\u7b7e\u540d-\u94fe\u4e0a\u9a8c\u8bc1\uff1b\u94fe\u4e0b\u4f7f\u7528 Ether.js \u8fdb\u884c\u7b7e\u540d\uff0c\u94fe\u4e0a\u4f7f\u7528 OpenZeppelin ECDSA \u9a8c\u8bc1"),(0,o.kt)("h3",{id:"ethersjs"},"ethers.js"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'const provider = new ethers.providers.Web3Provider(ethereum);\n      let signer = await provider.getSigner();\n      // 2. \u7b7e\u540d\u5185\u5bb9\u8fdb\u884c solidityKeccak256\u683c\u5f0f Hash\n      let message = ethers.utils.solidityKeccak256(["string"], ["HelloWorld"]);\n      // 3.\u8f6c\u6210UTF8 bytes\n      let arrayifyMessage = ethers.utils.arrayify(message);\n      // 4.\u4f7f\u7528\u79c1\u94a5\u8fdb\u884c\u6d88\u606f\u7b7e\u540d\n      let flatSignature = await signer.signMessage(arrayifyMessage);\n')),(0,o.kt)("h3",{id:"contract"},"contract"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport "@openzeppelin/contracts/utils/cryptography/ECDSA.sol";\n\ncontract Verification {\n    address owner;\n    using ECDSA for bytes32;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function isMessageValid(bytes memory _signature)\n        public\n        view\n        returns (address, bool)\n    {\n        // 1. \u5bf9\u7b7e\u540d\u4fe1\u606f\u8fdb\u884c abi \u7f16\u7801\n        bytes memory abiEncode = abi.encodePacked("HelloWorld");\n\n        // 2. \u518d\u8fdb\u884c keccak256 Hash\u8fd0\u7b97\n        bytes32 messagehash = keccak256(abiEncode);\n        \n        // 3. \u6dfb\u52a0\u524d\u7f00\uff0c\u53ef\u4ee5\u5c06\u8ba1\u7b97\u51fa\u7684\u4ee5\u592a\u574a\u7279\u5b9a\u7684\u7b7e\u540d\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u6076\u610f DApp \u53ef\u4ee5\u7b7e\u7f72\u4efb\u610f\u6570\u636e\uff08\u4f8b\u5982\u4ea4\u6613\uff09\u5e76\u4f7f\u7528\u7b7e\u540d\u6765\u5192\u5145\u53d7\u5bb3\u8005\u7684\u6ee5\u7528\u884c\u4e3a\u3002\n        bytes32 ethSignedMessageHash = ECDSA.toEthSignedMessageHash(messagehash);\n        \n        // 4. \u4ece\u7b7e\u540d\u6062\u590d\u5730\u5740\n        address signer = ECDSA.recover(ethSignedMessageHash,_signature);\n\n        if (owner == signer) {\n            return (signer, true);\n        } else {\n            return (signer, false);\n        }\n    }\n}\n')))}d.isMDXComponent=!0}}]);