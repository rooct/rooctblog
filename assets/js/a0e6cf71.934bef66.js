"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7030],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var o=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,o,r=function(t,e){if(null==t)return{};var n,o,r={},i=Object.keys(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=o.createContext({}),u=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=u(t.components);return o.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},p=o.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,l=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?o.createElement(f,a(a({ref:e},s),{},{components:n})):o.createElement(f,a({ref:e},s))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,a=new Array(i);a[0]=p;var c={};for(var l in e)hasOwnProperty.call(e,l)&&(c[l]=e[l]);c.originalType=t,c.mdxType="string"==typeof t?t:r,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5199:function(t,e,n){n.r(e),n.d(e,{contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return s}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],c={title:"Structs",version:"0.8.10",description:"An example of how to use structs in Solidity"},l=void 0,u={unversionedId:"Example/Structs",id:"Example/Structs",isDocsHomePage:!1,title:"Structs",description:"An example of how to use structs in Solidity",source:"@site/docs/Example/Structs.md",sourceDirName:"Example",slug:"/Example/Structs",permalink:"/rooctblog/docs/Example/Structs",tags:[],version:"current",frontMatter:{title:"Structs",version:"0.8.10",description:"An example of how to use structs in Solidity"},sidebar:"tutorialSidebar",previous:{title:"Reading and Writing to a State Variable",permalink:"/rooctblog/docs/Example/SimpleStorage"},next:{title:"Calling Parent Contracts",permalink:"/rooctblog/docs/Example/Super"}},s=[{value:"Declaring and importing Struct",id:"declaring-and-importing-struct",children:[]}],d={toc:s};function p(t){var e=t.components,n=(0,r.Z)(t,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You can define your own type by creating a ",(0,i.kt)("inlineCode",{parentName:"p"},"struct"),"."),(0,i.kt)("p",null,"They are useful for grouping together related data."),(0,i.kt)("p",null,"Structs can be declared outside of a contract and imported in another contract."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract Todos {\n    struct Todo {\n        string text;\n        bool completed;\n    }\n\n    // An array of 'Todo' structs\n    Todo[] public todos;\n\n    function create(string memory _text) public {\n        // 3 ways to initialize a struct\n        // - calling it like a function\n        todos.push(Todo(_text, false));\n\n        // key value mapping\n        todos.push(Todo({text: _text, completed: false}));\n\n        // initialize an empty struct and then update it\n        Todo memory todo;\n        todo.text = _text;\n        // todo.completed initialized to false\n\n        todos.push(todo);\n    }\n\n    // Solidity automatically created a getter for 'todos' so\n    // you don't actually need this function.\n    function get(uint _index) public view returns (string memory text, bool completed) {\n        Todo storage todo = todos[_index];\n        return (todo.text, todo.completed);\n    }\n\n    // update text\n    function update(uint _index, string memory _text) public {\n        Todo storage todo = todos[_index];\n        todo.text = _text;\n    }\n\n    // update completed\n    function toggleCompleted(uint _index) public {\n        Todo storage todo = todos[_index];\n        todo.completed = !todo.completed;\n    }\n}\n\n")),(0,i.kt)("h3",{id:"declaring-and-importing-struct"},"Declaring and importing Struct"),(0,i.kt)("p",null,"File that the struct is declared in"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nstruct Todo {\n    string text;\n    bool completed;\n}\n\n")),(0,i.kt)("p",null,"File that imports the struct above"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"./StructDeclaration.sol\";\n\ncontract Todos {\n    // An array of 'Todo' structs\n    Todo[] public todos;\n}\n\n")))}p.isMDXComponent=!0}}]);