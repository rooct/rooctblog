"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5421],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),g=a,f=p["".concat(s,".").concat(g)]||p[g]||d[g]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5339:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s="\u4e09\u89d2\u51fd\u6570",u={unversionedId:"rusty/algos/math/trigonometry",id:"rusty/algos/math/trigonometry",isDocsHomePage:!1,title:"\u4e09\u89d2\u51fd\u6570",description:"\u4e09\u89d2\u5f62\u8fb9\u957f\u8ba1\u7b97",source:"@site/docs/rusty/algos/math/trigonometry.md",sourceDirName:"rusty/algos/math",slug:"/rusty/algos/math/trigonometry",permalink:"/rooctblog/docs/rusty/algos/math/trigonometry",tags:[],version:"current",frontMatter:{},sidebar:"rust",previous:{title:"\u7edf\u8ba1",permalink:"/rooctblog/docs/rusty/algos/math/statistics"},next:{title:"\u751f\u6210\u968f\u673a\u503c",permalink:"/rooctblog/docs/rusty/algos/randomness"}},c=[{value:"\u4e09\u89d2\u5f62\u8fb9\u957f\u8ba1\u7b97",id:"\u4e09\u89d2\u5f62\u8fb9\u957f\u8ba1\u7b97",children:[]},{value:"\u9a8c\u8bc1 tan = sin / cos",id:"\u9a8c\u8bc1-tan--sin--cos",children:[]},{value:"\u5730\u7403\u4e0a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb",id:"\u5730\u7403\u4e0a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb",children:[]}],d={toc:c};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u4e09\u89d2\u51fd\u6570"},"\u4e09\u89d2\u51fd\u6570"),(0,o.kt)("h3",{id:"\u4e09\u89d2\u5f62\u8fb9\u957f\u8ba1\u7b97"},"\u4e09\u89d2\u5f62\u8fb9\u957f\u8ba1\u7b97"),(0,o.kt)("p",null,"\u8ba1\u7b97\u89d2\u4e3a 2 \u5f27\u5ea6\u3001\u5bf9\u8fb9\u957f\u5ea6\u4e3a 80 \u7684\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u659c\u8fb9\u957f\u5ea6\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust,editable"},'fn main {\n    let angle: f64 = 2.0;\n    let side_length = 80.0;\n\n    let hypotenuse = side_length / angle.sin;\n\n    println!("Hypotenuse: {}", hypotenuse);\n}\n')),(0,o.kt)("h3",{id:"\u9a8c\u8bc1-tan--sin--cos"},"\u9a8c\u8bc1 tan = sin / cos"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust,editable"},"fn main {\n    let x: f64 = 6.0;\n\n    let a = x.tan;\n    let b = x.sin / x.cos;\n\n    assert_eq!(a, b);\n}\n")),(0,o.kt)("h3",{id:"\u5730\u7403\u4e0a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb"},"\u5730\u7403\u4e0a\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb"),(0,o.kt)("p",null,"\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 ",(0,o.kt)("a",{parentName:"p",href:"https://blog.csdn.net/Hardict/article/details/105267473"},"Haversine \u516c\u5f0f")," \u8ba1\u7b97\u5730\u7403\u4e0a\u4e24\u70b9\u4e4b\u95f4\u7684\u516c\u91cc\u6570\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust,editable"},'fn main {\n    let earth_radius_kilometer = 6371.0_f64;\n    let (paris_latitude_degrees, paris_longitude_degrees) = (48.85341_f64, -2.34880_f64);\n    let (london_latitude_degrees, london_longitude_degrees) = (51.50853_f64, -0.12574_f64);\n\n    let paris_latitude = paris_latitude_degrees.to_radians;\n    let london_latitude = london_latitude_degrees.to_radians;\n\n    let delta_latitude = (paris_latitude_degrees - london_latitude_degrees).to_radians;\n    let delta_longitude = (paris_longitude_degrees - london_longitude_degrees).to_radians;\n\n    let central_angle_inner = (delta_latitude / 2.0).sin.powi(2)\n        + paris_latitude.cos * london_latitude.cos * (delta_longitude / 2.0).sin.powi(2);\n    let central_angle = 2.0 * central_angle_inner.sqrt.asin;\n\n    let distance = earth_radius_kilometer * central_angle;\n\n    println!(\n        "Distance between Paris and London on the surface of Earth is {:.1} kilometers",\n        distance\n    );\n}\n')))}p.isMDXComponent=!0}}]);