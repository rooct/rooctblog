"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6236],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(t),h=i,f=d["".concat(s,".").concat(h)]||d[h]||p[h]||a;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8730:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],c={title:"Front Running",version:"0.8.10",description:"An example of a Solidity contract vulnerable to front running"},s=void 0,l={unversionedId:"solidity/example/FrontRunning",id:"solidity/example/FrontRunning",isDocsHomePage:!1,title:"Front Running",description:"An example of a Solidity contract vulnerable to front running",source:"@site/docs/solidity/example/FrontRunning.md",sourceDirName:"solidity/example",slug:"/solidity/example/FrontRunning",permalink:"/rooctblog/docs/solidity/example/FrontRunning",tags:[],version:"current",frontMatter:{title:"Front Running",version:"0.8.10",description:"An example of a Solidity contract vulnerable to front running"},sidebar:"docs",previous:{title:"Fallback",permalink:"/rooctblog/docs/solidity/example/Fallback"},next:{title:"Function",permalink:"/rooctblog/docs/solidity/example/Function"}},u=[{value:"Vulnerability",id:"vulnerability",children:[]},{value:"Preventative Techniques",id:"preventative-techniques",children:[]}],p={toc:u};function d(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"vulnerability"},"Vulnerability"),(0,a.kt)("p",null,"Transactions take some time before they are mined. An attacker can watch the transaction pool\nand send a transaction, have it included in a block before the original transaction.\nThis mechanism can be abused to re-order transactions to the attacker's advantage."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\n/*\nAlice creates a guessing game.\nYou win 10 ether if you can find the correct string that hashes to the target\nhash. Let\'s see how this contract is vulnerable to front running.\n*/\n\n/*\n1. Alice deploys FindThisHash with 10 Ether.\n2. Bob finds the correct string that will hash to the target hash. ("Ethereum")\n3. Bob calls solve("Ethereum") with gas price set to 15 gwei.\n4. Eve is watching the transaction pool for the answer to be submitted.\n5. Eve sees Bob\'s answer and calls solve("Ethereum") with a higher gas price\n   than Bob (100 gwei).\n6. Eve\'s transaction was mined before Bob\'s transaction.\n   Eve won the reward of 10 ether.\n\nWhat happened?\nTransactions take some time before they are mined.\nTransactions not yet mined are put in the transaction pool.\nTransactions with higher gas price are typically mined first.\nAn attacker can get the answer from the transaction pool, send a transaction\nwith a higher gas price so that their transaction will be included in a block\nbefore the original.\n*/\n\ncontract FindThisHash {\n    bytes32 public constant hash =\n        0x564ccaf7594d66b1eaaea24fe01f0585bf52ee70852af4eac0cc4b04711cd0e2;\n\n    constructor() payable {}\n\n    function solve(string memory solution) public {\n        require(hash == keccak256(abi.encodePacked(solution)), "Incorrect answer");\n\n        (bool sent, ) = msg.sender.call{value: 10 ether}("");\n        require(sent, "Failed to send Ether");\n    }\n}\n\n')),(0,a.kt)("h3",{id:"preventative-techniques"},"Preventative Techniques"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"use commit-reveal scheme"),(0,a.kt)("li",{parentName:"ul"},"use submarine send")))}d.isMDXComponent=!0}}]);