"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[463],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3834:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],l={title:"Upgradeable Proxy",version:"0.8.10",description:"Example of upgradeable proxy"},p=void 0,c={unversionedId:"solidity/example/app/UpgradeableProxy",id:"solidity/example/app/UpgradeableProxy",isDocsHomePage:!1,title:"Upgradeable Proxy",description:"Example of upgradeable proxy",source:"@site/docs/solidity/example/app/UpgradeableProxy.md",sourceDirName:"solidity/example/app",slug:"/solidity/example/app/UpgradeableProxy",permalink:"/rooctblog/docs/solidity/example/app/UpgradeableProxy",tags:[],version:"current",frontMatter:{title:"Upgradeable Proxy",version:"0.8.10",description:"Example of upgradeable proxy"},sidebar:"docs",previous:{title:"Uni-Directional Payment Channel",permalink:"/rooctblog/docs/solidity/example/app/UniDirectionalPaymentChannel"},next:{title:"Chainlink Price Oracle",permalink:"/rooctblog/docs/solidity/example/defi/Chainlink"}},s=[],u={toc:s};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Example of upgradeable proxy contract. Never use this in production."),(0,o.kt)("p",null,"This example shows how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"delegatecall")," and return data when ",(0,o.kt)("inlineCode",{parentName:"p"},"fallback")," is called."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract Proxy {\n    address public implementation;\n\n    function setImplementation(address _imp) external {\n        implementation = _imp;\n    }\n\n    function _delegate(address _imp) internal virtual {\n        assembly {\n            // calldatacopy(t, f, s)\n            // copy s bytes from calldata at position f to mem at position t\n            calldatacopy(0, 0, calldatasize())\n\n            // delegatecall(g, a, in, insize, out, outsize)\n            // - call contract at address a\n            // - with input mem[in\u2026(in+insize))\n            // - providing g gas\n            // - and output area mem[out\u2026(out+outsize))\n            // - returning 0 on error and 1 on success\n            let result := delegatecall(gas(), _imp, 0, calldatasize(), 0, 0)\n\n            // returndatacopy(t, f, s)\n            // copy s bytes from returndata at position f to mem at position t\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            case 0 {\n                // revert(p, s)\n                // end execution, revert state changes, return data mem[p\u2026(p+s))\n                revert(0, returndatasize())\n            }\n            default {\n                // return(p, s)\n                // end execution, return data mem[p\u2026(p+s))\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    fallback() external payable {\n        _delegate(implementation);\n    }\n}\n\ncontract V1 {\n    address public implementation;\n    uint public x;\n\n    function inc() external {\n        x += 1;\n    }\n}\n\ncontract V2 {\n    address public implementation;\n    uint public x;\n\n    function inc() external {\n        x += 1;\n    }\n\n    function dec() external {\n        x -= 1;\n    }\n}\n\n")))}d.isMDXComponent=!0}}]);