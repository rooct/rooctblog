"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1458],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},y=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,c=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),y=u(n),f=o,m=y["".concat(c,".").concat(f)]||y[f]||p[f]||a;return n?r.createElement(m,i(i({ref:e},s),{},{components:n})):r.createElement(m,i({ref:e},s))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=y;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2259:function(t,e,n){n.r(e),n.d(e,{contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Slot",version:"0.8.10",description:"Write to Any Slot"},c=void 0,u={unversionedId:"example/app/Slot",id:"example/app/Slot",isDocsHomePage:!1,title:"Slot",description:"Write to Any Slot",source:"@site/docs/example/app/Slot.md",sourceDirName:"example/app",slug:"/example/app/Slot",permalink:"/rooctblog/docs/example/app/Slot",tags:[],version:"current",frontMatter:{title:"Slot",version:"0.8.10",description:"Write to Any Slot"},sidebar:"docs",previous:{title:"Proxy",permalink:"/rooctblog/docs/example/app/Proxy"},next:{title:"Uni-Directional Payment Channel",permalink:"/rooctblog/docs/example/app/UniDirectionalPaymentChannel"}},s=[],p={toc:s};function y(t){var e=t.components,n=(0,o.Z)(t,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Solidity storage is like an array of length 2^256.\nEach slot in the array can store 32 bytes."),(0,a.kt)("p",null,"State variables define which slots will be used to store data."),(0,a.kt)("p",null,"However using assembly, you can write to any slot."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract Storage {\n    struct MyStruct {\n        uint value;\n    }\n\n    // struct stored at slot 0\n    MyStruct public s0 = MyStruct(123);\n    // struct stored at slot 1\n    MyStruct public s1 = MyStruct(456);\n    // struct stored at slot 2\n    MyStruct public s2 = MyStruct(789);\n\n    function _get(uint i) internal pure returns (MyStruct storage s) {\n        // get struct stored at slot i\n        assembly {\n            s.slot := i\n        }\n    }\n\n    /*\n    get(0) returns 123\n    get(1) returns 456\n    get(2) returns 789\n    */\n    function get(uint i) external view returns (uint) {\n        // get value inside MyStruct stored at slot i\n        return _get(i).value;\n    }\n\n    /*\n    We can save data to any slot including slot 999 which is normally unaccessble.\n\n    set(999) = 888 \n    */\n    function set(uint i, uint x) external {\n        // set value of MyStruct to x and store it at slot i\n        _get(i).value = x;\n    }\n}\n\n")))}y.isMDXComponent=!0}}]);