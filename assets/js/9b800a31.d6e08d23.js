"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1886],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=l(t),m=a,d=f["".concat(u,".").concat(m)]||f[m]||p[m]||i;return t?r.createElement(d,o(o({ref:n},s),{},{components:t})):r.createElement(d,o({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9005:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],c={title:"Interface",version:"0.8.10",description:"An example of interface in Solidity"},u=void 0,l={unversionedId:"example/Interface",id:"example/Interface",isDocsHomePage:!1,title:"Interface",description:"An example of interface in Solidity",source:"@site/docs/example/Interface.md",sourceDirName:"example",slug:"/example/Interface",permalink:"/rooctblog/docs/example/Interface",tags:[],version:"current",frontMatter:{title:"Interface",version:"0.8.10",description:"An example of interface in Solidity"},sidebar:"docs",previous:{title:"Inheritance",permalink:"/rooctblog/docs/example/Inheritance"},next:{title:"Hashing with Keccak256",permalink:"/rooctblog/docs/example/Keccak256"}},s=[],p={toc:s};function f(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You can interact with other contracts by declaring an ",(0,i.kt)("inlineCode",{parentName:"p"},"Interface"),"."),(0,i.kt)("p",null,"Interface"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"cannot have any functions implemented"),(0,i.kt)("li",{parentName:"ul"},"can inherit from other interfaces"),(0,i.kt)("li",{parentName:"ul"},"all declared functions must be external"),(0,i.kt)("li",{parentName:"ul"},"cannot declare a constructor"),(0,i.kt)("li",{parentName:"ul"},"cannot declare state variables")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ncontract Counter {\n    uint public count;\n\n    function increment() external {\n        count += 1;\n    }\n}\n\ninterface ICounter {\n    function count() external view returns (uint);\n\n    function increment() external;\n}\n\ncontract MyContract {\n    function incrementCounter(address _counter) external {\n        ICounter(_counter).increment();\n    }\n\n    function getCount(address _counter) external view returns (uint) {\n        return ICounter(_counter).count();\n    }\n}\n\n// Uniswap example\ninterface UniswapV2Factory {\n    function getPair(address tokenA, address tokenB)\n        external\n        view\n        returns (address pair);\n}\n\ninterface UniswapV2Pair {\n    function getReserves()\n        external\n        view\n        returns (\n            uint112 reserve0,\n            uint112 reserve1,\n            uint32 blockTimestampLast\n        );\n}\n\ncontract UniswapExample {\n    address private factory = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;\n    address private dai = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address private weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n\n    function getTokenReserves() external view returns (uint, uint) {\n        address pair = UniswapV2Factory(factory).getPair(dai, weth);\n        (uint reserve0, uint reserve1, ) = UniswapV2Pair(pair).getReserves();\n        return (reserve0, reserve1);\n    }\n}\n\n")))}f.isMDXComponent=!0}}]);